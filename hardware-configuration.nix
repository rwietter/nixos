# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "ahci"
    "usbhid"
    "usb_storage"
    "sd_mod"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/4ba66dea-4757-48c6-a7c6-bffdc238ad04";
    fsType = "ext4";
  };

#  fileSystems."/boot" = {
#    device = "/dev/disk/by-uuid/D820-B7CB";
#    fsType = "vfat";
#    options = [
#      "fmask=0077"
#      "dmask=0077"
#    ];
#  };

  # Show uuid with `blkid` command
  fileSystems."/boot/efi" = {
    device = "/dev/disk/by-uuid/E834-B967";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s20f0u6.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp1s0.useDHCP = lib.mkDefault true;

  # Bluetooth
  hardware.bluetooth.enable = true; # enables support for Bluetooth
  hardware.bluetooth.powerOnBoot = true; # powers up the default Bluetooth controller on boot

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  # 1. Enable the hardware graphics acceleration and VA-API support
  hardware.graphics = {
    enable = true;
    enable32Bit = true; # Opcional, mas bom para compatibilidade (Steam, Wine)

    # VA-API Intel
    extraPackages = with pkgs; [
      libva # Biblioteca VA-API principal
      intel-media-driver # Driver VA-API para Intel Gen8+ (inclui HD 630)
      libva-utils # Contém a ferramenta 'vainfo' para teste
      # mesa.drivers     # Necessário para AMD
    ];
  };
}
